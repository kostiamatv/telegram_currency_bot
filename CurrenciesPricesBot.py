import re

import telebot

from CurrenciesPricesParser import CurrenciesPricesParser
from MessageParser import MessageParser

MAX_BANK_NAME_LEN = 20
MAX_PRICE_LEN = 6
START_LINE_PATTERN = "```\n‚ïî" + "‚ïê" * MAX_BANK_NAME_LEN + "‚ï§" + "‚ïê" * 6 + "‚ïó\n"
END_LINE_PATTERN = "‚ïö" + "‚ïê" * MAX_BANK_NAME_LEN + "‚ïß" + "‚ïê" * MAX_PRICE_LEN \
                   + "‚ïù\n```"
START_MESSAGE = "ü§ñ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–≤–µ—á–∞–µ—Ç, –µ—Å–ª–∏ –ø–æ—è–≤–ª—è–ª–∞—Å—å –≤–∞–ª—é—Ç–∞ –∏ –≥–æ—Ä–æ–¥.\n"\
                "‚òë –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –≤–∞–ª—é—Ç—ã üí∏: USD, EUR, GBP, CNY, JPY (–∫–æ–¥ –∏–ª–∏ —Å–ª–æ–≤–æ)\n"\
                "üá∑üá∫ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã –≤—Å–µ—Ö 85 —Ä–µ–≥–∏–Ω–æ–≤\n"\
                "‚òë –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –¶–ë –†–§ –ø–æ –≤–∞–ª—é—Ç–µ –≤ –æ–ø—Ä–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å (/cb)"


def get_table_row(bank_name: str, price: float):
    price = str(price)
    output = "‚ïë"
    output += bank_name
    output += (MAX_BANK_NAME_LEN - len(bank_name)) * " "
    output += "|"
    output += price
    output += (MAX_PRICE_LEN - len(price) - 1) * " "
    output += "—Ä‚ïë\n"
    return output


with open("API_Token", "r") as inp:
    API_Token = inp.readline()
bot = telebot.TeleBot(API_Token)
currency_parser = CurrenciesPricesParser()
message_parser = MessageParser()


@bot.message_handler(commands=['start'])
def handle_start_help(message):
    bot.send_message(message.chat.id, "–ë–æ—Ç —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç üíµüí∂üí∑üí¥")
    bot.send_message(message.chat.id, START_MESSAGE)


@bot.message_handler(commands=['cb'])
def handle_cb(message):
    if re.match(r"^/cb [A-Za-z]{3} [0-9]{2}[./][0-9]{2}[./][0-9]{4}$",
                message.text) is None:
        bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                                          "/cb <–∫–æ–¥ –≤–∞–ª—é—Ç—ã> <–¥–∞—Ç–∞> \n"
                                          "–ü—Ä–∏–º–µ—Ä—ã:\n"
                                          "‚òë /cb usd 20.09.2005\n"
                                          "‚òë /cb JPY 20/09/2005")
    else:
        _, currency_code, date = message.text.split()
        date = date.replace("/", ".")
        price = currency_parser.get_cb_price(currency_code, date.split("."))
        output = f"üíπ–ö—É—Ä—Å {currency_code.upper()} " \
                 f"–Ω–∞ {date} —Å–æ–≥–ª–∞—Å–Ω–æ –¶–ë –†–§: {price}—Ä"
        bot.reply_to(message, output)


@bot.message_handler()
def handle_any_message(message):
    message_parser.parse(message)
    parsed_data = message_parser.get_values()
    if len(parsed_data) == 3:
        bot_message = bot.reply_to(message, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é ‚åõ ")
        currency = parsed_data[0]
        city_url = parsed_data[1]
        city = parsed_data[2]
        currency_rates = currency_parser \
            .get_local_prices(currency, city_url)
        if currency_rates is None:
            bot.edit_message_text(
                f"–î–∞–Ω–Ω—ã—Ö –ø–æ {currency.upper()}–≤ –≥. {city} –Ω–µ—Ç",
                chat_id=message.chat.id,
                message_id=bot_message.message_id)
        else:
            output = f"üîÑ –õ—É—á—à–∏–µ –∫—É—Ä—Å—ã {currency.upper()} –≤ –≥. {city}: \n "
            output += "–ö—É–ø–∏—Ç—å:\n"
            best_offers = currency_rates \
                              .sort_values(by="selling_price") \
                              .reset_index().iloc[:5]
            for i in range(best_offers.shape[0]):
                bank_name = best_offers.iloc[i]['bank_name']
                price = best_offers.loc[i, 'selling_price']
                output += "üíµ " + str(price)
                output += (MAX_PRICE_LEN - len(str(price))) * "0"
                output += "—Ä üè¶ " + bank_name + "\n"

            output += f"\n–ü—Ä–æ–¥–∞—Ç—å: \n"
            best_offers = currency_rates \
                              .sort_values(by="buying_price", ascending=False) \
                              .reset_index() \
                              .iloc[:5]
            for i in range(best_offers.shape[0]):
                bank_name = best_offers.iloc[i]['bank_name']
                price = best_offers.loc[i, 'buying_price']
                output += "üíµ " + str(price)
                output += (MAX_PRICE_LEN - len(str(price))) * "0"
                output += "—Ä üè¶ " + bank_name + "\n"
            bot.edit_message_text(output,
                                  chat_id=message.chat.id,
                                  message_id=bot_message.message_id,
                                  parse_mode="Markdown")


bot.polling()
